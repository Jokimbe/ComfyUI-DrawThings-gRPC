from __future__ import annotations

import flatbuffers
import numpy as np

import typing
from typing import cast

uoffset: typing.TypeAlias = flatbuffers.number_types.UOffsetTFlags.py_type

class SamplerType(object):
  DPMPP2MKarras = cast(int, ...)
  EulerA = cast(int, ...)
  DDIM = cast(int, ...)
  PLMS = cast(int, ...)
  DPMPPSDEKarras = cast(int, ...)
  UniPC = cast(int, ...)
  LCM = cast(int, ...)
  EulerASubstep = cast(int, ...)
  DPMPPSDESubstep = cast(int, ...)
  TCD = cast(int, ...)
  EulerATrailing = cast(int, ...)
  DPMPPSDETrailing = cast(int, ...)
  DPMPP2MAYS = cast(int, ...)
  EulerAAYS = cast(int, ...)
  DPMPPSDEAYS = cast(int, ...)
  DPMPP2MTrailing = cast(int, ...)
  DDIMTrailing = cast(int, ...)
  UniPCTrailing = cast(int, ...)
  UniPCAYS = cast(int, ...)
class SeedMode(object):
  Legacy = cast(int, ...)
  TorchCpuCompatible = cast(int, ...)
  ScaleAlike = cast(int, ...)
  NvidiaGpuCompatible = cast(int, ...)
class ControlMode(object):
  Balanced = cast(int, ...)
  Prompt = cast(int, ...)
  Control = cast(int, ...)
class ControlInputType(object):
  Unspecified = cast(int, ...)
  Custom = cast(int, ...)
  Depth = cast(int, ...)
  Canny = cast(int, ...)
  Scribble = cast(int, ...)
  Pose = cast(int, ...)
  Normalbae = cast(int, ...)
  Color = cast(int, ...)
  Lineart = cast(int, ...)
  Softedge = cast(int, ...)
  Seg = cast(int, ...)
  Inpaint = cast(int, ...)
  Ip2p = cast(int, ...)
  Shuffle = cast(int, ...)
  Mlsd = cast(int, ...)
  Tile = cast(int, ...)
  Blur = cast(int, ...)
  Lowquality = cast(int, ...)
  Gray = cast(int, ...)
class LoRAMode(object):
  All = cast(int, ...)
  Base = cast(int, ...)
  Refiner = cast(int, ...)
class Control(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> Control: ...
  @classmethod
  def GetRootAsControl(cls, buf: bytes, offset: int) -> Control: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def File(self) -> str | None: ...
  def Weight(self) -> float: ...
  def GuidanceStart(self) -> float: ...
  def GuidanceEnd(self) -> float: ...
  def NoPrompt(self) -> bool: ...
  def GlobalAveragePooling(self) -> bool: ...
  def DownSamplingRate(self) -> float: ...
  def ControlMode(self) -> typing.Literal[ControlMode.Balanced, ControlMode.Prompt, ControlMode.Control]: ...
  def TargetBlocks(self, i: int) -> str: ...
  def TargetBlocksLength(self) -> int: ...
  def TargetBlocksIsNone(self) -> bool: ...
  def InputOverride(self) -> typing.Literal[ControlInputType.Unspecified, ControlInputType.Custom, ControlInputType.Depth, ControlInputType.Canny, ControlInputType.Scribble, ControlInputType.Pose, ControlInputType.Normalbae, ControlInputType.Color, ControlInputType.Lineart, ControlInputType.Softedge, ControlInputType.Seg, ControlInputType.Inpaint, ControlInputType.Ip2p, ControlInputType.Shuffle, ControlInputType.Mlsd, ControlInputType.Tile, ControlInputType.Blur, ControlInputType.Lowquality, ControlInputType.Gray]: ...
class ControlT(object):
  file: str | None
  weight: float
  guidanceStart: float
  guidanceEnd: float
  noPrompt: bool
  globalAveragePooling: bool
  downSamplingRate: float
  controlMode: typing.Literal[ControlMode.Balanced, ControlMode.Prompt, ControlMode.Control]
  targetBlocks: typing.List[str]
  inputOverride: typing.Literal[ControlInputType.Unspecified, ControlInputType.Custom, ControlInputType.Depth, ControlInputType.Canny, ControlInputType.Scribble, ControlInputType.Pose, ControlInputType.Normalbae, ControlInputType.Color, ControlInputType.Lineart, ControlInputType.Softedge, ControlInputType.Seg, ControlInputType.Inpaint, ControlInputType.Ip2p, ControlInputType.Shuffle, ControlInputType.Mlsd, ControlInputType.Tile, ControlInputType.Blur, ControlInputType.Lowquality, ControlInputType.Gray]
  def __init__(
    self,
    file: str | None = ...,
    weight: float = ...,
    guidanceStart: float = ...,
    guidanceEnd: float = ...,
    noPrompt: bool = ...,
    globalAveragePooling: bool = ...,
    downSamplingRate: float = ...,
    controlMode: typing.Literal[ControlMode.Balanced, ControlMode.Prompt, ControlMode.Control] = ...,
    targetBlocks: typing.List[str] | None = ...,
    inputOverride: typing.Literal[ControlInputType.Unspecified, ControlInputType.Custom, ControlInputType.Depth, ControlInputType.Canny, ControlInputType.Scribble, ControlInputType.Pose, ControlInputType.Normalbae, ControlInputType.Color, ControlInputType.Lineart, ControlInputType.Softedge, ControlInputType.Seg, ControlInputType.Inpaint, ControlInputType.Ip2p, ControlInputType.Shuffle, ControlInputType.Mlsd, ControlInputType.Tile, ControlInputType.Blur, ControlInputType.Lowquality, ControlInputType.Gray] = ...,
  ) -> None: ...
  @classmethod
  def InitFromBuf(cls, buf: bytes, pos: int) -> ControlT: ...
  @classmethod
  def InitFromPackedBuf(cls, buf: bytes, pos: int = 0) -> ControlT: ...
  @classmethod
  def InitFromObj(cls, control: Control) -> ControlT: ...
  def _UnPack(self, control: Control) -> None: ...
  def Pack(self, builder: flatbuffers.Builder) -> None: ...
def ControlStart(builder: flatbuffers.Builder) -> None: ...
def ControlAddFile(builder: flatbuffers.Builder, file: uoffset) -> None: ...
def ControlAddWeight(builder: flatbuffers.Builder, weight: float) -> None: ...
def ControlAddGuidanceStart(builder: flatbuffers.Builder, guidanceStart: float) -> None: ...
def ControlAddGuidanceEnd(builder: flatbuffers.Builder, guidanceEnd: float) -> None: ...
def ControlAddNoPrompt(builder: flatbuffers.Builder, noPrompt: bool) -> None: ...
def ControlAddGlobalAveragePooling(builder: flatbuffers.Builder, globalAveragePooling: bool) -> None: ...
def ControlAddDownSamplingRate(builder: flatbuffers.Builder, downSamplingRate: float) -> None: ...
def ControlAddControlMode(builder: flatbuffers.Builder, controlMode: typing.Literal[ControlMode.Balanced, ControlMode.Prompt, ControlMode.Control]) -> None: ...
def ControlAddTargetBlocks(builder: flatbuffers.Builder, targetBlocks: uoffset) -> None: ...
def ControlStartTargetBlocksVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def ControlAddInputOverride(builder: flatbuffers.Builder, inputOverride: typing.Literal[ControlInputType.Unspecified, ControlInputType.Custom, ControlInputType.Depth, ControlInputType.Canny, ControlInputType.Scribble, ControlInputType.Pose, ControlInputType.Normalbae, ControlInputType.Color, ControlInputType.Lineart, ControlInputType.Softedge, ControlInputType.Seg, ControlInputType.Inpaint, ControlInputType.Ip2p, ControlInputType.Shuffle, ControlInputType.Mlsd, ControlInputType.Tile, ControlInputType.Blur, ControlInputType.Lowquality, ControlInputType.Gray]) -> None: ...
def ControlEnd(builder: flatbuffers.Builder) -> uoffset: ...
class LoRA(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> LoRA: ...
  @classmethod
  def GetRootAsLoRA(cls, buf: bytes, offset: int) -> LoRA: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def File(self) -> str | None: ...
  def Weight(self) -> float: ...
  def Mode(self) -> typing.Literal[LoRAMode.All, LoRAMode.Base, LoRAMode.Refiner]: ...
class LoRAT(object):
  file: str | None
  weight: float
  mode: typing.Literal[LoRAMode.All, LoRAMode.Base, LoRAMode.Refiner]
  def __init__(
    self,
    file: str | None = ...,
    weight: float = ...,
    mode: typing.Literal[LoRAMode.All, LoRAMode.Base, LoRAMode.Refiner] = ...,
  ) -> None: ...
  @classmethod
  def InitFromBuf(cls, buf: bytes, pos: int) -> LoRAT: ...
  @classmethod
  def InitFromPackedBuf(cls, buf: bytes, pos: int = 0) -> LoRAT: ...
  @classmethod
  def InitFromObj(cls, loRa: LoRA) -> LoRAT: ...
  def _UnPack(self, loRa: LoRA) -> None: ...
  def Pack(self, builder: flatbuffers.Builder) -> None: ...
def LoRAStart(builder: flatbuffers.Builder) -> None: ...
def LoRAAddFile(builder: flatbuffers.Builder, file: uoffset) -> None: ...
def LoRAAddWeight(builder: flatbuffers.Builder, weight: float) -> None: ...
def LoRAAddMode(builder: flatbuffers.Builder, mode: typing.Literal[LoRAMode.All, LoRAMode.Base, LoRAMode.Refiner]) -> None: ...
def LoRAEnd(builder: flatbuffers.Builder) -> uoffset: ...
class GenerationConfiguration(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> GenerationConfiguration: ...
  @classmethod
  def GetRootAsGenerationConfiguration(cls, buf: bytes, offset: int) -> GenerationConfiguration: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Id(self) -> int: ...
  def StartWidth(self) -> int: ...
  def StartHeight(self) -> int: ...
  def Seed(self) -> int: ...
  def Steps(self) -> int: ...
  def GuidanceScale(self) -> float: ...
  def Strength(self) -> float: ...
  def Model(self) -> str | None: ...
  def Sampler(self) -> typing.Literal[SamplerType.DPMPP2MKarras, SamplerType.EulerA, SamplerType.DDIM, SamplerType.PLMS, SamplerType.DPMPPSDEKarras, SamplerType.UniPC, SamplerType.LCM, SamplerType.EulerASubstep, SamplerType.DPMPPSDESubstep, SamplerType.TCD, SamplerType.EulerATrailing, SamplerType.DPMPPSDETrailing, SamplerType.DPMPP2MAYS, SamplerType.EulerAAYS, SamplerType.DPMPPSDEAYS, SamplerType.DPMPP2MTrailing, SamplerType.DDIMTrailing, SamplerType.UniPCTrailing, SamplerType.UniPCAYS]: ...
  def BatchCount(self) -> int: ...
  def BatchSize(self) -> int: ...
  def HiresFix(self) -> bool: ...
  def HiresFixStartWidth(self) -> int: ...
  def HiresFixStartHeight(self) -> int: ...
  def HiresFixStrength(self) -> float: ...
  def Upscaler(self) -> str | None: ...
  def ImageGuidanceScale(self) -> float: ...
  def SeedMode(self) -> typing.Literal[SeedMode.Legacy, SeedMode.TorchCpuCompatible, SeedMode.ScaleAlike, SeedMode.NvidiaGpuCompatible]: ...
  def ClipSkip(self) -> int: ...
  def Controls(self, i: int) -> Control | None: ...
  def ControlsLength(self) -> int: ...
  def ControlsIsNone(self) -> bool: ...
  def Loras(self, i: int) -> LoRA | None: ...
  def LorasLength(self) -> int: ...
  def LorasIsNone(self) -> bool: ...
  def MaskBlur(self) -> float: ...
  def FaceRestoration(self) -> str | None: ...
  def ClipWeight(self) -> float: ...
  def NegativePromptForImagePrior(self) -> bool: ...
  def ImagePriorSteps(self) -> int: ...
  def RefinerModel(self) -> str | None: ...
  def OriginalImageHeight(self) -> int: ...
  def OriginalImageWidth(self) -> int: ...
  def CropTop(self) -> int: ...
  def CropLeft(self) -> int: ...
  def TargetImageHeight(self) -> int: ...
  def TargetImageWidth(self) -> int: ...
  def AestheticScore(self) -> float: ...
  def NegativeAestheticScore(self) -> float: ...
  def ZeroNegativePrompt(self) -> bool: ...
  def RefinerStart(self) -> float: ...
  def NegativeOriginalImageHeight(self) -> int: ...
  def NegativeOriginalImageWidth(self) -> int: ...
  def Name(self) -> str | None: ...
  def FpsId(self) -> int: ...
  def MotionBucketId(self) -> int: ...
  def CondAug(self) -> float: ...
  def StartFrameCfg(self) -> float: ...
  def NumFrames(self) -> int: ...
  def MaskBlurOutset(self) -> int: ...
  def Sharpness(self) -> float: ...
  def Shift(self) -> float: ...
  def Stage2Steps(self) -> int: ...
  def Stage2Cfg(self) -> float: ...
  def Stage2Shift(self) -> float: ...
  def TiledDecoding(self) -> bool: ...
  def DecodingTileWidth(self) -> int: ...
  def DecodingTileHeight(self) -> int: ...
  def DecodingTileOverlap(self) -> int: ...
  def StochasticSamplingGamma(self) -> float: ...
  def PreserveOriginalAfterInpaint(self) -> bool: ...
  def TiledDiffusion(self) -> bool: ...
  def DiffusionTileWidth(self) -> int: ...
  def DiffusionTileHeight(self) -> int: ...
  def DiffusionTileOverlap(self) -> int: ...
  def UpscalerScaleFactor(self) -> int: ...
  def T5TextEncoder(self) -> bool: ...
  def SeparateClipL(self) -> bool: ...
  def ClipLText(self) -> str | None: ...
  def SeparateOpenClipG(self) -> bool: ...
  def OpenClipGText(self) -> str | None: ...
  def SpeedUpWithGuidanceEmbed(self) -> bool: ...
  def GuidanceEmbed(self) -> float: ...
  def ResolutionDependentShift(self) -> bool: ...
  def TeaCacheStart(self) -> int: ...
  def TeaCacheEnd(self) -> int: ...
  def TeaCacheThreshold(self) -> float: ...
  def TeaCache(self) -> bool: ...
  def SeparateT5(self) -> bool: ...
  def T5Text(self) -> str | None: ...
  def TeaCacheMaxSkipSteps(self) -> int: ...
  def CausalInferenceEnabled(self) -> bool: ...
  def CausalInference(self) -> int: ...
  def CausalInferencePad(self) -> int: ...
  def CfgZeroStar(self) -> bool: ...
  def CfgZeroInitSteps(self) -> int: ...
class GenerationConfigurationT(object):
  id: int
  startWidth: int
  startHeight: int
  seed: int
  steps: int
  guidanceScale: float
  strength: float
  model: str | None
  sampler: typing.Literal[SamplerType.DPMPP2MKarras, SamplerType.EulerA, SamplerType.DDIM, SamplerType.PLMS, SamplerType.DPMPPSDEKarras, SamplerType.UniPC, SamplerType.LCM, SamplerType.EulerASubstep, SamplerType.DPMPPSDESubstep, SamplerType.TCD, SamplerType.EulerATrailing, SamplerType.DPMPPSDETrailing, SamplerType.DPMPP2MAYS, SamplerType.EulerAAYS, SamplerType.DPMPPSDEAYS, SamplerType.DPMPP2MTrailing, SamplerType.DDIMTrailing, SamplerType.UniPCTrailing, SamplerType.UniPCAYS]
  batchCount: int
  batchSize: int
  hiresFix: bool
  hiresFixStartWidth: int
  hiresFixStartHeight: int
  hiresFixStrength: float
  upscaler: str | None
  imageGuidanceScale: float
  seedMode: typing.Literal[SeedMode.Legacy, SeedMode.TorchCpuCompatible, SeedMode.ScaleAlike, SeedMode.NvidiaGpuCompatible]
  clipSkip: int
  controls: typing.List[ControlT]
  loras: typing.List[LoRAT]
  maskBlur: float
  faceRestoration: str | None
  clipWeight: float
  negativePromptForImagePrior: bool
  imagePriorSteps: int
  refinerModel: str | None
  originalImageHeight: int
  originalImageWidth: int
  cropTop: int
  cropLeft: int
  targetImageHeight: int
  targetImageWidth: int
  aestheticScore: float
  negativeAestheticScore: float
  zeroNegativePrompt: bool
  refinerStart: float
  negativeOriginalImageHeight: int
  negativeOriginalImageWidth: int
  name: str | None
  fpsId: int
  motionBucketId: int
  condAug: float
  startFrameCfg: float
  numFrames: int
  maskBlurOutset: int
  sharpness: float
  shift: float
  stage2Steps: int
  stage2Cfg: float
  stage2Shift: float
  tiledDecoding: bool
  decodingTileWidth: int
  decodingTileHeight: int
  decodingTileOverlap: int
  stochasticSamplingGamma: float
  preserveOriginalAfterInpaint: bool
  tiledDiffusion: bool
  diffusionTileWidth: int
  diffusionTileHeight: int
  diffusionTileOverlap: int
  upscalerScaleFactor: int
  t5TextEncoder: bool
  separateClipL: bool
  clipLText: str | None
  separateOpenClipG: bool
  openClipGText: str | None
  speedUpWithGuidanceEmbed: bool
  guidanceEmbed: float
  resolutionDependentShift: bool
  teaCacheStart: int
  teaCacheEnd: int
  teaCacheThreshold: float
  teaCache: bool
  separateT5: bool
  t5Text: str | None
  teaCacheMaxSkipSteps: int
  causalInferenceEnabled: bool
  causalInference: int
  causalInferencePad: int
  cfgZeroStar: bool
  cfgZeroInitSteps: int
  def __init__(
    self,
    id: int = ...,
    startWidth: int = ...,
    startHeight: int = ...,
    seed: int = ...,
    steps: int = ...,
    guidanceScale: float = ...,
    strength: float = ...,
    model: str | None = ...,
    sampler: typing.Literal[SamplerType.DPMPP2MKarras, SamplerType.EulerA, SamplerType.DDIM, SamplerType.PLMS, SamplerType.DPMPPSDEKarras, SamplerType.UniPC, SamplerType.LCM, SamplerType.EulerASubstep, SamplerType.DPMPPSDESubstep, SamplerType.TCD, SamplerType.EulerATrailing, SamplerType.DPMPPSDETrailing, SamplerType.DPMPP2MAYS, SamplerType.EulerAAYS, SamplerType.DPMPPSDEAYS, SamplerType.DPMPP2MTrailing, SamplerType.DDIMTrailing, SamplerType.UniPCTrailing, SamplerType.UniPCAYS] = ...,
    batchCount: int = ...,
    batchSize: int = ...,
    hiresFix: bool = ...,
    hiresFixStartWidth: int = ...,
    hiresFixStartHeight: int = ...,
    hiresFixStrength: float = ...,
    upscaler: str | None = ...,
    imageGuidanceScale: float = ...,
    seedMode: typing.Literal[SeedMode.Legacy, SeedMode.TorchCpuCompatible, SeedMode.ScaleAlike, SeedMode.NvidiaGpuCompatible] = ...,
    clipSkip: int = ...,
    controls: typing.List['ControlT'] | None = ...,
    loras: typing.List['LoRAT'] | None = ...,
    maskBlur: float = ...,
    faceRestoration: str | None = ...,
    clipWeight: float = ...,
    negativePromptForImagePrior: bool = ...,
    imagePriorSteps: int = ...,
    refinerModel: str | None = ...,
    originalImageHeight: int = ...,
    originalImageWidth: int = ...,
    cropTop: int = ...,
    cropLeft: int = ...,
    targetImageHeight: int = ...,
    targetImageWidth: int = ...,
    aestheticScore: float = ...,
    negativeAestheticScore: float = ...,
    zeroNegativePrompt: bool = ...,
    refinerStart: float = ...,
    negativeOriginalImageHeight: int = ...,
    negativeOriginalImageWidth: int = ...,
    name: str | None = ...,
    fpsId: int = ...,
    motionBucketId: int = ...,
    condAug: float = ...,
    startFrameCfg: float = ...,
    numFrames: int = ...,
    maskBlurOutset: int = ...,
    sharpness: float = ...,
    shift: float = ...,
    stage2Steps: int = ...,
    stage2Cfg: float = ...,
    stage2Shift: float = ...,
    tiledDecoding: bool = ...,
    decodingTileWidth: int = ...,
    decodingTileHeight: int = ...,
    decodingTileOverlap: int = ...,
    stochasticSamplingGamma: float = ...,
    preserveOriginalAfterInpaint: bool = ...,
    tiledDiffusion: bool = ...,
    diffusionTileWidth: int = ...,
    diffusionTileHeight: int = ...,
    diffusionTileOverlap: int = ...,
    upscalerScaleFactor: int = ...,
    t5TextEncoder: bool = ...,
    separateClipL: bool = ...,
    clipLText: str | None = ...,
    separateOpenClipG: bool = ...,
    openClipGText: str | None = ...,
    speedUpWithGuidanceEmbed: bool = ...,
    guidanceEmbed: float = ...,
    resolutionDependentShift: bool = ...,
    teaCacheStart: int = ...,
    teaCacheEnd: int = ...,
    teaCacheThreshold: float = ...,
    teaCache: bool = ...,
    separateT5: bool = ...,
    t5Text: str | None = ...,
    teaCacheMaxSkipSteps: int = ...,
    causalInferenceEnabled: bool = ...,
    causalInference: int = ...,
    causalInferencePad: int = ...,
    cfgZeroStar: bool = ...,
    cfgZeroInitSteps: int = ...,
  ) -> None: ...
  @classmethod
  def InitFromBuf(cls, buf: bytes, pos: int) -> GenerationConfigurationT: ...
  @classmethod
  def InitFromPackedBuf(cls, buf: bytes, pos: int = 0) -> GenerationConfigurationT: ...
  @classmethod
  def InitFromObj(cls, generationConfiguration: GenerationConfiguration) -> GenerationConfigurationT: ...
  def _UnPack(self, generationConfiguration: GenerationConfiguration) -> None: ...
  def Pack(self, builder: flatbuffers.Builder) -> None: ...
def GenerationConfigurationStart(builder: flatbuffers.Builder) -> None: ...
def GenerationConfigurationAddId(builder: flatbuffers.Builder, id: int) -> None: ...
def GenerationConfigurationAddStartWidth(builder: flatbuffers.Builder, startWidth: int) -> None: ...
def GenerationConfigurationAddStartHeight(builder: flatbuffers.Builder, startHeight: int) -> None: ...
def GenerationConfigurationAddSeed(builder: flatbuffers.Builder, seed: int) -> None: ...
def GenerationConfigurationAddSteps(builder: flatbuffers.Builder, steps: int) -> None: ...
def GenerationConfigurationAddGuidanceScale(builder: flatbuffers.Builder, guidanceScale: float) -> None: ...
def GenerationConfigurationAddStrength(builder: flatbuffers.Builder, strength: float) -> None: ...
def GenerationConfigurationAddModel(builder: flatbuffers.Builder, model: uoffset) -> None: ...
def GenerationConfigurationAddSampler(builder: flatbuffers.Builder, sampler: typing.Literal[SamplerType.DPMPP2MKarras, SamplerType.EulerA, SamplerType.DDIM, SamplerType.PLMS, SamplerType.DPMPPSDEKarras, SamplerType.UniPC, SamplerType.LCM, SamplerType.EulerASubstep, SamplerType.DPMPPSDESubstep, SamplerType.TCD, SamplerType.EulerATrailing, SamplerType.DPMPPSDETrailing, SamplerType.DPMPP2MAYS, SamplerType.EulerAAYS, SamplerType.DPMPPSDEAYS, SamplerType.DPMPP2MTrailing, SamplerType.DDIMTrailing, SamplerType.UniPCTrailing, SamplerType.UniPCAYS]) -> None: ...
def GenerationConfigurationAddBatchCount(builder: flatbuffers.Builder, batchCount: int) -> None: ...
def GenerationConfigurationAddBatchSize(builder: flatbuffers.Builder, batchSize: int) -> None: ...
def GenerationConfigurationAddHiresFix(builder: flatbuffers.Builder, hiresFix: bool) -> None: ...
def GenerationConfigurationAddHiresFixStartWidth(builder: flatbuffers.Builder, hiresFixStartWidth: int) -> None: ...
def GenerationConfigurationAddHiresFixStartHeight(builder: flatbuffers.Builder, hiresFixStartHeight: int) -> None: ...
def GenerationConfigurationAddHiresFixStrength(builder: flatbuffers.Builder, hiresFixStrength: float) -> None: ...
def GenerationConfigurationAddUpscaler(builder: flatbuffers.Builder, upscaler: uoffset) -> None: ...
def GenerationConfigurationAddImageGuidanceScale(builder: flatbuffers.Builder, imageGuidanceScale: float) -> None: ...
def GenerationConfigurationAddSeedMode(builder: flatbuffers.Builder, seedMode: typing.Literal[SeedMode.Legacy, SeedMode.TorchCpuCompatible, SeedMode.ScaleAlike, SeedMode.NvidiaGpuCompatible]) -> None: ...
def GenerationConfigurationAddClipSkip(builder: flatbuffers.Builder, clipSkip: int) -> None: ...
def GenerationConfigurationAddControls(builder: flatbuffers.Builder, controls: uoffset) -> None: ...
def GenerationConfigurationStartControlsVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def GenerationConfigurationAddLoras(builder: flatbuffers.Builder, loras: uoffset) -> None: ...
def GenerationConfigurationStartLorasVector(builder: flatbuffers.Builder, num_elems: int) -> uoffset: ...
def GenerationConfigurationAddMaskBlur(builder: flatbuffers.Builder, maskBlur: float) -> None: ...
def GenerationConfigurationAddFaceRestoration(builder: flatbuffers.Builder, faceRestoration: uoffset) -> None: ...
def GenerationConfigurationAddClipWeight(builder: flatbuffers.Builder, clipWeight: float) -> None: ...
def GenerationConfigurationAddNegativePromptForImagePrior(builder: flatbuffers.Builder, negativePromptForImagePrior: bool) -> None: ...
def GenerationConfigurationAddImagePriorSteps(builder: flatbuffers.Builder, imagePriorSteps: int) -> None: ...
def GenerationConfigurationAddRefinerModel(builder: flatbuffers.Builder, refinerModel: uoffset) -> None: ...
def GenerationConfigurationAddOriginalImageHeight(builder: flatbuffers.Builder, originalImageHeight: int) -> None: ...
def GenerationConfigurationAddOriginalImageWidth(builder: flatbuffers.Builder, originalImageWidth: int) -> None: ...
def GenerationConfigurationAddCropTop(builder: flatbuffers.Builder, cropTop: int) -> None: ...
def GenerationConfigurationAddCropLeft(builder: flatbuffers.Builder, cropLeft: int) -> None: ...
def GenerationConfigurationAddTargetImageHeight(builder: flatbuffers.Builder, targetImageHeight: int) -> None: ...
def GenerationConfigurationAddTargetImageWidth(builder: flatbuffers.Builder, targetImageWidth: int) -> None: ...
def GenerationConfigurationAddAestheticScore(builder: flatbuffers.Builder, aestheticScore: float) -> None: ...
def GenerationConfigurationAddNegativeAestheticScore(builder: flatbuffers.Builder, negativeAestheticScore: float) -> None: ...
def GenerationConfigurationAddZeroNegativePrompt(builder: flatbuffers.Builder, zeroNegativePrompt: bool) -> None: ...
def GenerationConfigurationAddRefinerStart(builder: flatbuffers.Builder, refinerStart: float) -> None: ...
def GenerationConfigurationAddNegativeOriginalImageHeight(builder: flatbuffers.Builder, negativeOriginalImageHeight: int) -> None: ...
def GenerationConfigurationAddNegativeOriginalImageWidth(builder: flatbuffers.Builder, negativeOriginalImageWidth: int) -> None: ...
def GenerationConfigurationAddName(builder: flatbuffers.Builder, name: uoffset) -> None: ...
def GenerationConfigurationAddFpsId(builder: flatbuffers.Builder, fpsId: int) -> None: ...
def GenerationConfigurationAddMotionBucketId(builder: flatbuffers.Builder, motionBucketId: int) -> None: ...
def GenerationConfigurationAddCondAug(builder: flatbuffers.Builder, condAug: float) -> None: ...
def GenerationConfigurationAddStartFrameCfg(builder: flatbuffers.Builder, startFrameCfg: float) -> None: ...
def GenerationConfigurationAddNumFrames(builder: flatbuffers.Builder, numFrames: int) -> None: ...
def GenerationConfigurationAddMaskBlurOutset(builder: flatbuffers.Builder, maskBlurOutset: int) -> None: ...
def GenerationConfigurationAddSharpness(builder: flatbuffers.Builder, sharpness: float) -> None: ...
def GenerationConfigurationAddShift(builder: flatbuffers.Builder, shift: float) -> None: ...
def GenerationConfigurationAddStage2Steps(builder: flatbuffers.Builder, stage2Steps: int) -> None: ...
def GenerationConfigurationAddStage2Cfg(builder: flatbuffers.Builder, stage2Cfg: float) -> None: ...
def GenerationConfigurationAddStage2Shift(builder: flatbuffers.Builder, stage2Shift: float) -> None: ...
def GenerationConfigurationAddTiledDecoding(builder: flatbuffers.Builder, tiledDecoding: bool) -> None: ...
def GenerationConfigurationAddDecodingTileWidth(builder: flatbuffers.Builder, decodingTileWidth: int) -> None: ...
def GenerationConfigurationAddDecodingTileHeight(builder: flatbuffers.Builder, decodingTileHeight: int) -> None: ...
def GenerationConfigurationAddDecodingTileOverlap(builder: flatbuffers.Builder, decodingTileOverlap: int) -> None: ...
def GenerationConfigurationAddStochasticSamplingGamma(builder: flatbuffers.Builder, stochasticSamplingGamma: float) -> None: ...
def GenerationConfigurationAddPreserveOriginalAfterInpaint(builder: flatbuffers.Builder, preserveOriginalAfterInpaint: bool) -> None: ...
def GenerationConfigurationAddTiledDiffusion(builder: flatbuffers.Builder, tiledDiffusion: bool) -> None: ...
def GenerationConfigurationAddDiffusionTileWidth(builder: flatbuffers.Builder, diffusionTileWidth: int) -> None: ...
def GenerationConfigurationAddDiffusionTileHeight(builder: flatbuffers.Builder, diffusionTileHeight: int) -> None: ...
def GenerationConfigurationAddDiffusionTileOverlap(builder: flatbuffers.Builder, diffusionTileOverlap: int) -> None: ...
def GenerationConfigurationAddUpscalerScaleFactor(builder: flatbuffers.Builder, upscalerScaleFactor: int) -> None: ...
def GenerationConfigurationAddT5TextEncoder(builder: flatbuffers.Builder, t5TextEncoder: bool) -> None: ...
def GenerationConfigurationAddSeparateClipL(builder: flatbuffers.Builder, separateClipL: bool) -> None: ...
def GenerationConfigurationAddClipLText(builder: flatbuffers.Builder, clipLText: uoffset) -> None: ...
def GenerationConfigurationAddSeparateOpenClipG(builder: flatbuffers.Builder, separateOpenClipG: bool) -> None: ...
def GenerationConfigurationAddOpenClipGText(builder: flatbuffers.Builder, openClipGText: uoffset) -> None: ...
def GenerationConfigurationAddSpeedUpWithGuidanceEmbed(builder: flatbuffers.Builder, speedUpWithGuidanceEmbed: bool) -> None: ...
def GenerationConfigurationAddGuidanceEmbed(builder: flatbuffers.Builder, guidanceEmbed: float) -> None: ...
def GenerationConfigurationAddResolutionDependentShift(builder: flatbuffers.Builder, resolutionDependentShift: bool) -> None: ...
def GenerationConfigurationAddTeaCacheStart(builder: flatbuffers.Builder, teaCacheStart: int) -> None: ...
def GenerationConfigurationAddTeaCacheEnd(builder: flatbuffers.Builder, teaCacheEnd: int) -> None: ...
def GenerationConfigurationAddTeaCacheThreshold(builder: flatbuffers.Builder, teaCacheThreshold: float) -> None: ...
def GenerationConfigurationAddTeaCache(builder: flatbuffers.Builder, teaCache: bool) -> None: ...
def GenerationConfigurationAddSeparateT5(builder: flatbuffers.Builder, separateT5: bool) -> None: ...
def GenerationConfigurationAddT5Text(builder: flatbuffers.Builder, t5Text: uoffset) -> None: ...
def GenerationConfigurationAddTeaCacheMaxSkipSteps(builder: flatbuffers.Builder, teaCacheMaxSkipSteps: int) -> None: ...
def GenerationConfigurationAddCausalInferenceEnabled(builder: flatbuffers.Builder, causalInferenceEnabled: bool) -> None: ...
def GenerationConfigurationAddCausalInference(builder: flatbuffers.Builder, causalInference: int) -> None: ...
def GenerationConfigurationAddCausalInferencePad(builder: flatbuffers.Builder, causalInferencePad: int) -> None: ...
def GenerationConfigurationAddCfgZeroStar(builder: flatbuffers.Builder, cfgZeroStar: bool) -> None: ...
def GenerationConfigurationAddCfgZeroInitSteps(builder: flatbuffers.Builder, cfgZeroInitSteps: int) -> None: ...
def GenerationConfigurationEnd(builder: flatbuffers.Builder) -> uoffset: ...

